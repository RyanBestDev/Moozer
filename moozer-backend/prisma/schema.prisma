// prisma/schema.prisma

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @map("_id")
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]
 cattle       Cattle[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id @map("_id")
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id @map("_id")
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id @map("_id")
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Cattle {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  gender      String
  description String
  age         Int
  weight      Float
  breed       String
  cattleData  CattleData[]

  userId String 
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model CattleData {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  latitude      Float
  longitude     Float
  lightLevel    Int
  temperature   Float
  behaviorState String
  timestamp     DateTime?
  cattleId      String   @db.ObjectId
  cattle        Cattle   @relation(fields: [cattleId], references: [id], onDelete: Cascade)
}